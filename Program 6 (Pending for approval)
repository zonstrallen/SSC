------------------------------------------PROGRAM 6A-----------------------------------------------
STEP 1:
gedit pgm6a.l

STEP 2:
%{
#include<stdio.h>
int sl=0;
int ml=0;
%}
%%
"/*"[a-zA-Z0-9' '\t\n]+"*/" ml++;
"//".* sl++;
%%
int main()
{
yyin=fopen("f1.c","r");
yyout=fopen("f2.c","w");
yylex();
fclose(yyin);
fclose(yyout);
printf("\n Number of single line comments are = %d\n",sl);
printf("\nNumber of multiline comments are =%d\n",ml); }

STEP 3:
File--->New--->Copy code and then save the file f1.c
#include<stdio.h>
int main()
{
// hello
//bye
//goodbye
//see you soon

/*hello
bye
goodbye
see you soon*/
/*hello
bye
goodbye
see you soon*/
printf("hello world");
}


STEP 4:
lex pgm6a.l
cc lex.yy.c -ll
./a.out

------------------------------------------PROGRAM 6B-----------------------------------------------
STEP 1:
gedit pgm6b.l

STEP2:
%{
#include<stdio.h>
#include<stdlib.h>
#include "y.tab.h"
extern int yylval;
%}
%%
[\t] ;
[+|-|*|/|!=|<|>] {printf("operator is %s\n", yytext); return OP;}
[0-9]+ { yylval= atoi(yytext); printf("number is %d\n",yylval);
return DIGIT;}
int|char|bool|float|void|for|do|while|if|else|return|void {printf("keyword is %s\n", yytext);return KEY;}
[a-zA-Z0-9]+ {printf("identifier is %s\n", yytext);return ID;}
. ;
%%


STEP3:
gedit pgm6b.y


STEP 4:
%{
#include<stdio.h>
#include<stdlib.h>
int id=0, dig=0, key=0, op=0;
%}
%token DIGIT ID KEY OP
%%
input:DIGIT input { dig++;}
| ID input { id++;}
| KEY input { key++;}
| OP input { op++;}
| DIGIT { dig++;}
| ID { id++;}
| KEY { key++;}
| OP { op++;}
;
%%
#include<stdio.h>
extern int yylex();
extern int yyparse();
extern FILE *yyin;
main()
{
FILE *myfile=fopen("ss_input.c", "r");
if(!myfile)
{
printf("Cannot open ss_input.c!!");
return -1;
}
yyin=myfile;
do
{
yyparse();
} while(!feof(yyin));
printf("numbers=%d\n Keywords=%d\n Identifiers=%d\n Operators=%d\n",dig,key,id,op);
}
void yyerror()
{
printf("Parse error! Message:");
exit(-1);
}

STEP 5:
File--->New---->paste and save as 'ss_input.c'

STEP 6:
#include<stdio.h>
int main()
{
int a=1,b=3,c;
printf(c=a+b);
}


STEP 7:
lex pgm6b.l
yacc -d pgm6b.y
cc lex.yy.c y.tab.c -ll
./a.out
